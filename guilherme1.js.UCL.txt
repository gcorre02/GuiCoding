string = prompt("give me the text to compress","Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where's the peck of pickled peppers Peter Piper picked?");

function encode(str){
arraA = [];
arraA = str.split(" ");
//console.log(arraA);
arraB =[];
for (var i in arraA){
    for (var t in arraA){
        if (arraA[i]===arraA[t] && i!==t){
            arraB.push(arraA[i]);
            var temp = arraA[i];
            for(var z in arraA){
                if(arraA[z]===temp){
                    delete arraA[z];
                }
            }
        }
        
    }
}
for (var a in arraB){
    for(var b in arraA){
        if (arraB[a]===arraA[b].substring(0,arraB[a].length)){
            arraA[b]=arraA[b].substring(arraB[a].length);
        }
    }
}
//console.log(arraB);
//console.log(arraA);

prime = false;
square = false;
unit = false;

if (arraB.length<=10){
    unit = true;
}
//console.log(unit+" "+arraB.length);
var arraC = [];
arraC = str.split(" ");
if(unit){
    for (var c in arraB){
        for (var d in arraC){
            if (arraB[c] === arraC[d]){
                arraC[d] = c;
            } else {
                if (arraB[c] === arraC[d].substring(0,arraB[c].length)){
                    arraC[d] = c + arraC[d].substring(arraB[c].length);
                }
            }
        
        }
        
    }
}

//console.log(arraC);
var finalString = (arraB.join(" ")+" $ "+arraC.join(" ")).toString();
//console.log(finalString);
return finalString; //need to join only the numbers, since that will save space - and that's the reason why i am using <10
}
function decode(str){
    //console.log("this is str " + str);
    var arraE = [];
    arraE = str.split(" ");
    var num = arraE.indexOf("$");
    var arraF = [];
    for(var r = 0 ; r < num ; r++ ){
       arraF.push(arraE[r]);
    }
    var arraG = [];
    var arraH = [];
    var newString = arraE.join(""); //if you remove the space, the spaces are not counted on arraH
    arraG = newString.split("");
    var num1 = arraG.indexOf("$");
    for (var p = num1+1; p<arraG.length; p++){
        arraH.push(arraG[p]);
    }
    arraI = [];
    finishedA = false;
    for(var w = 0 ; w<arraH.length ; w++){
        if(isNaN(arraH[w])===false){ //maybe it is here that the problem arrises, but joining the letters into words before this step is what will work.
        arraI[w] = arraF[arraH[w]];           
        } else {
    	    while(finishedA!==true){
			if(isNaN(arraE[w])===false){
				w=w+1;
	    }   else {
                finishedA = true;
            
        }
        arraI[w] = arraE[w];
        }

    }
    }
    var finalStr = "";
    for(var k =0; k<arraI.length; k++){
    finalStr = finalStr+" "+ arraI[k];}
    return("this is finalStr: " + finalStr + " THIS IS THE arraH " + arraH);
}

function question(){
    var user = prompt("encode, rate or decode?","decode");
    if(user === "encode"){
        console.log(encode(string));
}
else if(user === "rate") {
    var answer = Math.floor((encode(string).length/string.length)*100);
    console.log(answer+"%");
} else {
    console.log(decode(encode(string)));
}
}
question();


//string1 = "Peter Piper picked a peck of pickled peppers $ 0 1 2 3 4 5 6 7. A 4 5 6 7 0 1 2. If 0 1 2 3 4 5 6 7, Where's the 4 5 6 7 0 1 2?";

//decode(string1);